学习日期：2020年1月27日

用时：15点42分---

学习目标：
1、掌握JavaScript事件的概念，并能够写出基本的事件相关代码
2、掌握如何通过JavaScript操作DOM样式

笔记：
1、为了在用户点击元素时执行代码，请向HTML事件属性添加JavaScript代码：
onclick = JavaScript
事件举例：
当用户点击鼠标时
当网页加载后
当图像加载后
当鼠标移至元素上时
当输入字段被改变时
当HTML表单被提交时
当用户敲击按键时

2、当用户进入后离开页面时，会触发onload和onunload事件
onload事件可用于检测访问者的浏览器类型和浏览器版本，然后基于该信息加载网页的恰当版本
onload和onunload事件可用于处理cookie。

3、onchange事件经常与输入字段验证结合使用

4、onmouseover和onmouseout事件
onmouseover和onmouseout事件可用于当用户将鼠标移至HTML元素上或移出时触发某个函数

5、onmousedown和onmouseup以及onclick事件
当鼠标按钮被点击时，onmousedown事件被触发；当鼠标按钮被释放时，onmouseup事件被触发；当鼠标点击完成后，onclick事件被触发

6、事件是您在编程时系统内发生的动作或者发生的事情---系统会在事件出现时候触发某种信号并且会提供一个自动加载某种动作（例如：运行一些代码）的机制。
每个可用的事件都会有一个事件处理器，也就是事件触发时会运行的代码块。当我们定义了一个用来回应事件被激发的代码块的时候，我们说我们注册了一个事件
处理器。

7、新的事件触发机制被定义在Document Object Model(DOM) Level 2 Events Specification中，这个细则给浏览器提供了一个函数---addEventListener()。
在addEventListener()函数中，我们具体化了两个参数---我们想要将处理器应用上去的事件名称，和包含我们用来回应事件的函数的代码。注意将这些代码全部放
到一个匿名函数中是可行的。

有一个相对应的方法，removeEventListener()，这个方法移除事件监听器。

可以给同一个监听器注册多个处理器：
myElement.onclick = functionA;
myElement.onclick = functionB;
第二行会覆盖第一行
myElement.addEventListener('click', functionA);
myElement.addEventListener('click', functionB);
可以正常工作

8、有时候在事件处理函数的内部，您可能会看到一个固定指定名称的参数，例如event，evt或者简单的e。
这被称为事件对象，它被自动传递给事件处理函数，以提供额外的功能和信息。
事件对象e的target属性始终是事件刚刚发生的元素的引用。

9、当一个事件发生在具有父元素的元素上，现代浏览器运行两个不同的阶段-捕获阶段和冒泡阶段。
在捕获阶段：
浏览器检查元素的最外层祖先<html>，是否在捕获阶段中注册了一个onclick事件处理程序，如果是，则运行它。
然后，它移动到<html>中单击元素的下一个祖先元素，并执行相同的操作，然后是单击元素再下一个祖先元素，依次类推，直到到达实际点击的元素。
在冒泡阶段，恰恰相反：
浏览器检查实际点击的元素是否在冒泡阶段中注册了一个onclick事件处理程序，如果是，则运行它
然后它移动到下一个直接的祖先元素，并做同样的事情，然后是下一个，等等，直到它到达<html>元素。

现代浏览器，默认情况下，所有事件处理程序都在冒泡阶段进行注册。

标准事件对象具有可用的名为stopPropagation()的函数，当在事件对象上调用该函数时，它只会让当前事件处理程序运行，但事件不会在冒泡链上
进一步扩大，因此将不会有更多事件处理器被运行（不会向上冒泡）。

10、使用Style对象属性的语法：
document.getElementById(id).style.property = "值"

11、JavaScript动态修改css样式的四种方法
使用obj.className来修改样式表的类名
obj.style.backgroundColor = "black";
使用obj.style.cssText来修改嵌入式的css
obj.style.cssText = "display:block; color:white";
使用obj.className来修改样式表的类名？
obj.className = "style2";
obj.setAttribute("class", "style2");
使用更改外联的css文件，从而改变元素的css
obj.setAttribute("href", "css2.css");

12、


setTimeout()方法用于在指定的毫秒数后调用函数或计算表达式
语法：setTimeout(code,millisec)，其中code为要调用的函数后要执行的JavaScript代码串，millisec为在执行代码前需要等待的毫秒数
setTimeout()只执行code一次，多次调用可以使用setInterval()或者在code中再次调用setTimeout()方法
循环执行setTimeout()方法，一个循环的时间稍稍多余设定时间，因为执行其他代码块仍然需要时间，可以使用条件代码使循环执行的setTimeout（）方法停下来
可以使用clearTimeout()指定timeoutID停止某一循环setTimeout()方法
重复setTimeout()循环计时会加快计时速度

setInterval()方法可以按照指定的周期（以毫秒计）来调用函数或计算表达式
setInterval()方法会不停的调用函数，直到clearInterval()被调用或者窗口被关闭
语法：setInterval(code,millisec[,"lang"])，其中code是要调用的函数或要执行的代码串，millisec是周期性执行或调用code之间的时间间隔，以毫秒计
clearInterval()方法可与i取消对code的周期性执行

给定时器调用传递参数，无论是window.setTimeout还是window.setInterval，在使用函数名作为调用句柄时都不能带参数





验证：


收获：

问题：

